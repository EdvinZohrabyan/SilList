@model SO.SilList.Manager.Models.ValueObjects.JobVo

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";
}

<h2>Edit</h2>
@* todo: don't need image (multipart/form-data) upload for Jobs *@
@* @using (Html.BeginForm("Edit", "Job", FormMethod.Post, new { @encType = "multipart/form-data" })) *@
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset class="form-horizontal">
        <legend></legend>

        @Html.HiddenFor(model => model.jobId)

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.siteId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "Site", new { id = Model.siteId })
                <a href="@Url.Action("Index", "Site", new { backUrl = @Url.RouteUrl(ViewContext.RouteData.Values), backName = @ViewContext.RouteData.Values["controller"].ToString() })" class="btn">Sites</a>
            </div>
        </div>
 <div class="control-group">
            <div class="control-label">
            @Html.LabelFor(model => model.title)
            </div>
            <div class="controls">
            @Html.EditorFor(model => model.title)
            @Html.ValidationMessageFor(model => model.title)
        </div>        
        </div>
        <div class="control-group">
            <div class="control-label">
            @Html.LabelFor(model => model.description)
            </div>
            <div class="controls">
            @Html.EditorFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>
        </div>

        <div class="control-group">
            <div class="control-label">
            @Html.LabelFor(model => model.jobTypeId)
            </div>
            <div class="controls">
            @Html.Action("DropDownList", "JobType", new { id = Model.jobTypeId })
            </div>
        </div>

       <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.address)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.address)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.cityTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "CityType", new { id = Model.cityTypeId })
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.stateTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "StateType", new { id = Model.stateTypeId })
            </div>
        </div>
                <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.countryTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "CountryType", new { id = Model.countryTypeId })
            </div>
        </div>
                <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.zip)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.zip)
                @Html.ValidationMessageFor(model => model.zip)
            </div>
        </div>
                        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.phone)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.phone)
            </div>
        </div>
                                <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.fax)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.fax)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
            @Html.LabelFor(model => model.isTravelRequired)
        </div>
            <div class="controls">
            @Html.EditorFor(model => model.isTravelRequired)
            @Html.ValidationMessageFor(model => model.isTravelRequired)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
            @Html.LabelFor(model => model.isTelecomute)
        </div>
            <div class="controls">
            @Html.EditorFor(model => model.isTelecomute)
            @Html.ValidationMessageFor(model => model.isTelecomute)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
            @Html.LabelFor(model => model.jobCompanyId)
        </div>
            <div class="controls">
            @Html.EditorFor(model => model.jobCompanyId)
            @Html.ValidationMessageFor(model => model.jobCompanyId)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.startDate)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.startDate)
                @Html.ValidationMessageFor(model => model.startDate)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.endDate)
            </div>
            <div class="controls">
                <!-- <input type="text" value="@Html.DisplayFor(model => model.endDate)" id="endDate" /> -->
                @Html.EditorFor(model => model.endDate)
                @Html.ValidationMessageFor(model => model.endDate)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.isActive)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.isActive)
                @Html.ValidationMessageFor(model => model.isActive)
            </div>
        </div>

           <p>
            <input type="submit" value="Save" />
            <a href="@Url.Action("Index")" class="btn btn-info">Back to List</a>
        </p>
    </fieldset>
}

