@model SO.SilList.Manager.Models.ValueObjects.JobVo

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>JobDetails</legend>

     

        <div class="editor-label">
            @Html.LabelFor(model => model.siteId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.siteId)
            @Html.ValidationMessageFor(model => model.siteId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.title)
            @Html.ValidationMessageFor(model => model.title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.jobTypeId)
        </div>
        <div class="editor-field">
            @Html.Action("DropDownList", "JobType", new { id = Model.jobTypeId })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.cityTypeId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.cityTypeId)
            @Html.ValidationMessageFor(model => model.cityTypeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.stateTypeId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.stateTypeId)
            @Html.ValidationMessageFor(model => model.stateTypeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isTravelRequired)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isTravelRequired)
            @Html.ValidationMessageFor(model => model.isTravelRequired)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isTelecomute)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isTelecomute)
            @Html.ValidationMessageFor(model => model.isTelecomute)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.jobCompanyId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.jobCompanyId)
            @Html.ValidationMessageFor(model => model.jobCompanyId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isActive)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isActive)
            @Html.ValidationMessageFor(model => model.isActive)
        </div>

        <p class="controls">
            <input type="submit" value="Create" />
            <a href="@Url.Action("Index")" class="btn btn-info">Back to List</a>
        </p>
    </fieldset>
}

