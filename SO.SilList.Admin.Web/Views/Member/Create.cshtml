@model SO.SilList.Manager.Models.ValueObjects.MemberVo

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";
}

<h2>Create</h2>
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>MemberVo</legend>
        @*
         isEmailConfirmed)
        created
        modified
         model.createdBy
        model.modifiedBy
        *@


        <div class="editor-label">
            @Html.LabelFor(model => model.firstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.firstName)
            @Html.ValidationMessageFor(model => model.firstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.lastName)
            @Html.ValidationMessageFor(model => model.lastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lastLogin)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.lastLogin)
            @Html.ValidationMessageFor(model => model.lastLogin)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.address)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.address)
            @Html.ValidationMessageFor(model => model.address)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.cityTypeId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.cityTypeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.stateTypeId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.stateTypeId)
            @Html.ValidationMessageFor(model => model.stateTypeId)
        </div>

                <div class="editor-label">
            @Html.LabelFor(model => model.countryTypeId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.countryTypeId)
            @Html.ValidationMessageFor(model => model.countryTypeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.zip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.zip)
            @Html.ValidationMessageFor(model => model.zip)
        </div>

                <div class="editor-label">
            @Html.LabelFor(model => model.phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.phone)
            @Html.ValidationMessageFor(model => model.phone)
        </div>
                <div class="editor-label">
            @Html.LabelFor(model => model.fax)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.fax)
            @Html.ValidationMessageFor(model => model.fax)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.email)
            @Html.ValidationMessageFor(model => model.email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.username)
            @Html.ValidationMessageFor(model => model.username)
        </div>

        @*        <div class="editor-label">
            @Html.LabelFor(model => model.password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.password)
            @Html.ValidationMessageFor(model => model.password)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.phone)
            @Html.ValidationMessageFor(model => model.phone)
        </div>


        @*        <div class="editor-label">
            @Html.LabelFor(model => model.ipAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ipAddress)
            @Html.ValidationMessageFor(model => model.ipAddress)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.isEmailSubscribed)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isEmailSubscribed)
            @Html.ValidationMessageFor(model => model.isEmailSubscribed)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.siteId)
        </div>
        <div class="editor-field">
            @Html.Action("DropDownList", "Site", new { id = Model.siteId })
            <a href="@Url.Action("Index", "Site", new { backUrl = @Url.RouteUrl(ViewContext.RouteData.Values), backName = @ViewContext.RouteData.Values["controller"].ToString() })" class="btn">Sites</a>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isActive)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isActive)
            @Html.ValidationMessageFor(model => model.isActive)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-info">Back to List</a>
</div>
