@model SO.SilList.Manager.Models.ViewModels.ListingVm

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";

}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Listing", FormMethod.Post, new { @encType = "multipart/form-data", id = "myForm" }))
{
    @Html.ValidationSummary(true)

<fieldset>
    <legend>ListingVo</legend>

    @Html.HiddenFor(model => model.listing.listingId)

    <div class="editor-label">
        @Html.LabelFor(model => model.listing.siteId)
    </div>
    <div class="editor-field">
        @Html.Action("DropDownList", "Site", new { id = Model.listing.siteId })
        <a href="@Url.Action("Index", "Site", new { backUrl = @Url.RouteUrl(ViewContext.RouteData.Values), backName = @ViewContext.RouteData.Values["controller"].ToString() })" class="btn">Sites</a>
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.listing.title)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.listing.title)
        @Html.ValidationMessageFor(model => model.listing.title)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.listing.listingTypeId)
    </div>
    <div class="editor-field">
        @Html.Action("DropDownList", "ListingType", new { id = Model.listing.listingTypeId })
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.listing.description)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.listing.description)
        @Html.ValidationMessageFor(model => model.listing.description)
    </div>

     <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.listing.address)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.listing.address)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.listing.cityTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "CityType", new { id = Model.listing.cityTypeId, propertyName="listing.cityTypeId" })
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.listing.stateTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "StateType", new { id = Model.listing.stateTypeId, propertyName="listing.stateTypeId" })
            </div>
        </div>
                <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.listing.countryTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "CountryType", new { id = Model.listing.countryTypeId , propertyName="listing.countryTypeId"})
            </div>
        </div>
                <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.listing.zip)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.listing.zip)
                @Html.ValidationMessageFor(model => model.listing.zip)
            </div>
        </div>
                        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.listing.phone)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.listing.phone)
            </div>
        </div>
                                <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.listing.fax)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.listing.fax)
            </div>
        </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.listing.startDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.listing.startDate)
        @Html.ValidationMessageFor(model => model.listing.startDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.listing.endDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.listing.endDate)
        @Html.ValidationMessageFor(model => model.listing.endDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.listing.isActive)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.listing.isActive)
        @Html.ValidationMessageFor(model => model.listing.isActive)
    </div>
    <br />

        @* Listing image stuff below *@
        @{
        if (Model.imagesToRemove != null)
        {
            for (int index = 0; index < Model.imagesToRemove.Count; ++index)
            {
                <hr />
                @Html.HiddenFor(x => x.imagesToRemove[index].imageIdStr);
                <br />
                <img src="@Model.imagesToRemove[index].imageUrlStr" width="100px"  id="img_@index" />
        
                @: Uncheck to remove: 
                @Html.CheckBoxFor(m => m.imagesToRemove[index].imageIsChecked, new { id = "removeImg_" + index.ToString() })
            }
                <br />
        }
        }
        <hr />
        @Html.Partial("../Image/_ImagePickerControls")
        <br />
        @* end of Listing images stuff *@

    <p>
        <input type="submit" value="Save" />
    </p>
</fieldset>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-info">Back to List</a>
</div>
