@model SO.SilList.Manager.Models.ValueObjects.ImageVo

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>ImageVo</legend>

        @Html.HiddenFor(model => model.imageId)

        <div class="editor-label">
            @Html.LabelFor(model => model.name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.url)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.url)
            @Html.ValidationMessageFor(model => model.url)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.path)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.path)
            @Html.ValidationMessageFor(model => model.path)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.fileType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.fileType)
            @Html.ValidationMessageFor(model => model.fileType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.siteId)
        </div>
        <div class="editor-field">
            @Html.Action("DropDownList", "Site", new { id = Model.siteId })
            <a href="@Url.Action("Index", "Site", new { backUrl = @Url.RouteUrl(ViewContext.RouteData.Values), backName = @ViewContext.RouteData.Values["controller"].ToString() })" class="btn">Sites</a>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.height)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.height)
            @Html.ValidationMessageFor(model => model.height)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.width)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.width)
            @Html.ValidationMessageFor(model => model.width)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.size)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.size)
            @Html.ValidationMessageFor(model => model.size)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.created)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.created)
            @Html.ValidationMessageFor(model => model.created)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isActive)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isActive)
            @Html.ValidationMessageFor(model => model.isActive)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
      <a href="@Url.Action("~/Views/Images/Index")" class="btn btn-info">Back to List</a>
</div>
