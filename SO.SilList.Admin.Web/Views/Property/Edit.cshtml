@model SO.SilList.Manager.Models.ViewModels.PropertyVm

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Property", FormMethod.Post, new { @encType = "multipart/form-data", id = "myForm" }))
{
    
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend></legend>

        @Html.HiddenFor(model => model.property.propertyId)

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.propertyId)
            </div>
            <div class="controls">
                <input type="text" value="@Html.DisplayFor(model => model.property.propertyId)" readonly="true">
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.title)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.title)
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.description)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.description)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.propertyTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "PropertyType", new { id = Model.property.propertyTypeId , propertyName = "property.propertyTypeId"})
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.siteId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "Site", new { id = Model.property.siteId })
                <a href="@Url.Action("Index", "Site", new { backUrl = @Url.RouteUrl(ViewContext.RouteData.Values), backName = @ViewContext.RouteData.Values["controller"].ToString() })" class="btn">Sites</a>
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.bedroomTypeId)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.bedroomTypeId)
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.bathroomTypeId)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.bathroomTypeId)
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.price)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.price)
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.propertyListingTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "PropertyListingType",new {id = Model.property.propertyListingTypeId, propertyName = "property.propertyListingTypeId"})
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.size)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.size)
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.lotSize)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.lotSize)
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.acceptsSection8TypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "AcceptsSection8TypeType", new { id = Model.acceptsSection8TypeId, propertyName="acceptsSection8TypeId" })
            </div>
        </div>
        @*
        <div class="editor-label">
            @Html.LabelFor(model => model.property.entryStatusTypeId)
        </div>
        <div class="editor-field">
           @Html.Action("DropDownList", "EntryStatusType", new { id = Model.property.entryStatusTypeId, propertyName = "property.entryStatusTypeId" })
        </div>
        *@
         <div class="control-group">
            <div class="control-label">
                @Html.DisplayNameFor(model => model.property.address)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.address)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.cityTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "CityType", new { id = Model.property.cityTypeId, propertyName = "listing.cityTypeId" })
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.stateTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "StateType", new { id = Model.property.stateTypeId, propertyName = "listing.stateTypeId" })
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.countryTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "CountryType", new { id = Model.property.countryTypeId, propertyName = "listing.countryTypeId" })
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.zip)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.zip)
                @Html.ValidationMessageFor(model => model.property.zip)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.phone)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.phone)
                @Html.ValidationMessageFor(model => model.property.zip)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.fax)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.fax)
                @Html.ValidationMessageFor(model => model.property.zip)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.startDate)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.startDate)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.endDate)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.endDate)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.property.isActive)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.property.isActive)
                @Html.ValidationMessageFor(model => model.property.isActive)
            </div>
        </div>

            @* Rental image stuff below *@
            @{
    if (Model.imagesToRemove != null)
    {
        for (int index = 0; index < Model.imagesToRemove.Count; ++index)
        {
                            <hr />
                            @Html.HiddenFor(x => x.imagesToRemove[index].imageIdStr);
                            <br />
                            <img src="@Model.imagesToRemove[index].imageUrlStr" width="100px"  id="img_@index" />
        
                            @: Uncheck to remove: 
                            @Html.CheckBoxFor(m => m.imagesToRemove[index].imageIsChecked, new { id = "removeImg_" + index.ToString() })
        }
                            <br />
    }
            }
            <hr />
            @Html.Partial("../Image/_ImagePickerControls")
            <br />
            @* end of Rental images stuff *@

            <p>
                <input type="submit" class="btn" value="Save" />
                <a href="@Url.Action("Index")" class="btn btn-info">Back to List</a>
            </p>
    </fieldset>
}
