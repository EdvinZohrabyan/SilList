@model SO.SilList.Manager.Models.ViewModels.CarVm

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";
}


<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Car", FormMethod.Post, new { @encType = "multipart/form-data", id = "myForm" }))
{
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend></legend>

        @Html.HiddenFor(model => model.car.carId)

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.carId)
            </div>
            <div class="controls">
                <input type="text" value="@Html.DisplayFor(model => model.car.carId)" readonly="true">
            </div>
        </div>
       
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.siteId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "Site", new { id = Model.car.siteId ,propertyName = "car.siteId"})
                <a href="@Url.Action("Index", "Site", new { backUrl = @Url.RouteUrl(ViewContext.RouteData.Values), backName = @ViewContext.RouteData.Values["controller"].ToString() })" class="btn">Sites</a>
            </div>
        </div>

          <div class="control-group">
        <div class="control-label">@Html.DisplayNameFor(model => model.car.price)</div>
        <div class="controls">
           @Html.EditorFor(model => model.car.price)
        </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.makeTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "MakeType", new { id = Model.car.makeTypeId , propertyName="car.makeTypeId"})
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.modelTypeId)
            </div>
            <div class="controls" id="modelList">
                @Html.Action("DropDownList", "ModelType", new { id = Model.car.modelTypeId, _makeTypeId = Model.car.makeTypeId, propertyName="car.modelTypeId" })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.year)
            </div>
            <div class="controls">
                @{
                    int currentYear = DateTime.Now.Year;
                    var mylist = new string[31];
                    for (int i = 0; i < 31; i++)
                    {
                        mylist.SetValue((currentYear - 30 + i).ToString(), 30 - i);
                    }
                    var selectlist = new SelectList(mylist);
                }
                @Html.DropDownListFor(model => model.car.year, selectlist)
                @Html.ValidationMessageFor(model => model.car.year)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.millage)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.car.millage)
                @Html.ValidationMessageFor(model => model.car.millage)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.carBodyTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "CarBodyType", new { id = Model.car.carBodyTypeId, propertyName="car.carBodyTypeId" })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.transmissionTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "TransmissionType", new { id = Model.car.transmissionTypeId, propertyName="car.transmissionTypeId" })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.carDoorTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "carDoorType", new { id = Model.car.carDoorTypeId,  propertyName="car.carDoorTypeId"  })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.carDriveTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "carDriveType", new { id = Model.car.carDriveTypeId, propertyName="car.carDriveTypeId"  })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.carEngineTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "carEngineType", new { id = Model.car.carEngineTypeId, propertyName="car.carEngineTypeId"  })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.carFuelTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "carFuelType", new { id = Model.car.carFuelTypeId, propertyName="car.carFuelTypeId"  })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.exteriorColorTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "carColorType", new { id = Model.car.exteriorColorTypeId, propertyName="car.exteriorColorTypeId" })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.interiorColorTypeId)
            </div>
            <div class="controls">
                @Html.Action("DropDownList", "carColorType", new { id = Model.car.interiorColorTypeId,  propertyName="car.interiorColorTypeId" })
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.startDate)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.car.startDate)
                @Html.ValidationMessageFor(model => model.car.startDate)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.endDate)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.car.endDate)
                @Html.ValidationMessageFor(model => model.car.endDate)
            </div>
        </div>

                <div class="control-group">
        <div class="control-label">
            @Html.DisplayNameFor(model => model.car.description)
        </div>
        <div class="controls">
                @Html.TextAreaFor(model => model.car.description,new {@rows = 5 }) 
        </div>
     </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.isApproved)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.car.isApproved)
                @Html.ValidationMessageFor(model => model.car.isApproved)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.car.isActive)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.car.isActive)
                @Html.ValidationMessageFor(model => model.car.isActive)
            </div>
        </div>

        @* car image stuff below *@
        @{
        if (Model.imagesToRemove != null)
        {
            for (int index = 0; index < Model.imagesToRemove.Count; ++index)
            {
                <hr />
                @Html.HiddenFor(x => x.imagesToRemove[index].imageIdStr);
                <br />
                <img src="@Model.imagesToRemove[index].imageUrlStr" width="100px"  id="img_@index" />
        
                @: Uncheck to remove: 
                @Html.CheckBoxFor(m => m.imagesToRemove[index].imageIsChecked, new { id = "removeImg_" + index.ToString() })
            }
            <br />
        }
        }
        <hr />
        @Html.Partial("../Image/_ImagePickerControls")
        <br />
        @* end of car images stuff *@

        <p>
            <input type="submit" value="Save" />
            <a href="@Url.Action("Index")" class="btn btn-info">Back to List</a>
        </p>
        <hr />

    </fieldset>
}