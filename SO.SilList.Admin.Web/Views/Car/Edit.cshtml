@model SO.SilList.Manager.Models.ViewModels.CarVm

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";
}



<h2>@ViewBag.Title</h2>


@* @using (Html.BeginForm()) *@
@using (Html.BeginForm("Edit", "Car", FormMethod.Post, new { @encType = "multipart/form-data", id = "myForm" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend></legend>

        @Html.HiddenFor(model => model.car.carId)

        <div class="editor-label">
            @Html.LabelFor(model => model.car.modelTypeId)
        </div>
        <div class="editor-field">
            @Html.Action("DropDownList", "ModelType", new { id = Model.car.modelTypeId })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.car.year)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.car.year)
            @Html.ValidationMessageFor(model => model.car.year)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.car.millage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.car.millage)
            @Html.ValidationMessageFor(model => model.car.millage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.car.carBodyTypeId)
        </div>
        <div class="editor-field">
            @Html.Action("DropDownList", "CarBodyType", new { id = Model.car.carBodyTypeId })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.car.siteId)
        </div>
        <div class="editor-field">
            @Html.Action("DropDownList", "Site", new { id = Model.car.siteId })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.car.transmissionTypeId)
        </div>
        <div class="editor-field">
            @Html.Action("DropDownList", "TransmissionType", new { id = Model.car.transmissionTypeId })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.car.startDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.car.startDate)
            @Html.ValidationMessageFor(model => model.car.startDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.car.endDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.car.endDate)
            @Html.ValidationMessageFor(model => model.car.endDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.car.isApproved)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.car.isApproved)
            @Html.ValidationMessageFor(model => model.car.isApproved)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.car.isActive)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.car.isActive)
            @Html.ValidationMessageFor(model => model.car.isActive)
        </div>


        @* car image stuff below *@
        @{
    if (Model.imagesToRemove != null)
    {
        for (int index = 0; index < Model.imagesToRemove.Count; ++index)
        {
            // SO.SilList.Manager.Models.ValueObjects.ImageVo img = Model.imagesToRemove[index];
            
            @Html.HiddenFor(x => x.imagesToRemove[index].imageIdStr);
            @:
            <br /><img src="@Model.imagesToRemove[index].imageUrlStr" id="img_@index" />
        
            @: Uncheck to remove: 
@*
            <input name="removeImages" type="checkbox" id="removeImg_@index" checked="checked"/>
            // @Html.CheckBoxFor(model => model.car.isActive, new { id = "imagesToRemove", checked = "checked" } )
                       @Html.Hidden("removeImgGuid_" + index.ToString(), new { guid = @img.imageId } )
*@  
            @Html.CheckBoxFor(m => m.imagesToRemove[index].imageIsChecked, new { id = "removeImg_" + index.ToString() })

            @:
            @:

        }
            <br />
    }
        }
        @Html.Partial("../Image/_ImagePickerControls")  @* direct call *@
        <br />
        @* car images stuff above *@

        <p>
            <input type="submit" value="Save" />
            <a href="@Url.Action("Index")" class="btn btn-info">Back to List</a>
        </p>
        <hr />
        @*       <p>
                    @Html.Action("ImageListWithUploadForEdit", "Image" , new { id = Model.car.carId })
                </p>*@

        
    </fieldset>
}

@{
    var numberOfExistingCarImages = ViewBag.carImages != null ? ViewBag.carImages.Count : 0;
}
    
<script type="text/javascript">
    debugger;
    $(document).ready(function () {
        $("#myForm").submit(function () {
            var numOfCheckboxes = @numberOfExistingCarImages;
            for(var ind = 0; ind < numOfCheckboxes; ind++)
            {
                var checkBoxIdStr = "removeImg_" + ind;
                var checkBox = $("#" + checkBoxIdStr);
                if(checkBox != null)
                {
                    if(checkBox.checked())
                    {
                        alert( "checked: Num: " + ind);
                     
                        /*
                        var checkBox_CorrespondingHiddenControl = $(checkBoxIdStr);
                        if(checkBox_CorrespondingHiddenControl != null)
                            checkBox_CorrespondingHiddenControl.val(1);
                        */
                    }

                }
                // assuming all removed
            }
        });
    });
</script>
