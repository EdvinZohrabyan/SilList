@model IEnumerable<SO.SilList.Manager.Models.ValueObjects.JobVo>
@{
    ViewBag.Title = "Job";
}


@foreach (var item in Model)
{
    <div class="span12 businessInfo" style="height:140px; border-bottom:solid; border-bottom-width:1px; margin-left:-10px">
        <div class="media-body" style="padding: 5px;">
            <a href="@Url.Action("Detail",new { id = item.jobId })">
                <h5 class="media-heading">@item.title</h5>
            </a>
            <div class="businessAddressLine">
                Category: 
                 @{ 
                    SO.SilList.Manager.Managers.JobCategoriesManager jm = new SO.SilList.Manager.Managers.JobCategoriesManager();
                    if (item.jobCategories != null)
                    {
                        int size = item.jobCategories.Count;
                        int index=0;
                        foreach (var category in item.jobCategories)
                        {
                            var categoryId = category.jobCategoriesId;
                                     <span><a data-toggle="tooltip" data-placement="bottom" title="@jm.get(categoryId).jobCategoryType.description" href="#" onclick="selectAction(@jm.get(categoryId).jobCategoryTypeId,'jobCategoryId');">@jm.get(categoryId).jobCategoryType.name  </a></span>          
                            if (index != size)
                            {  
                                     <span>, </span>
                            }
                            index++;
                        }
                    }   
                 }
            </div>
            <div class="businessAddressLine">Location: <a href="/">@Html.DisplayFor(modelItem => item.cityType.name), @Html.DisplayFor(modelItem => item.stateType.stateCode)</a> </div>

            <div style="margin-left: 70%; margin-top: -40px;">
                <div class="businessAddressLine">@item.address</div>
                <div class="businessAddressLine">@Html.DisplayFor(modelItem => item.cityType.name), @Html.DisplayFor(modelItem => item.stateType.stateCode) @Html.DisplayFor(modelItem => item.zip)</div>
                <div class="businessAddressLine">@item.phone</div>
                <div class="businessAddressLine"><a href="http://@item.website" target="_blank">@Html.DisplayFor(modelItem => item.website)</a></div>
            </div>
        </div>

        <div style="margin-top: 5px; margin-bottom: 5px; text-align:justify">
            @{
                if(item.description != null)
                {
                var data = item.description;
                if (data.Length > 200)
                {
                            <div>@data.Substring(0, 200)...</div>
                }
                else
                {
                            <div>@data</div>
                }
                }
            }
        </div>

    </div>
}